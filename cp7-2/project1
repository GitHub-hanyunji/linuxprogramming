[1번 함수 중복을 설명하시오]
같은 이름의 함수를 여러 개 만들 수 있는 기능. 함수 이름은 같지만 매개변수의 개수나 타입이 다르게 정의해야함.
-> 컴파일러가 호출 시점에서 매개변수 목록을 기준으로 올바른 함수를 선택하기 때문임.

[2번 연산자 중복을 설명하시오]
같은 연산자가 피연산자에 따라 다른 연산을 수행하도록 하는 것으로 
기존의 연산자를 사용자 정의의 클래스에 대해 새롭게 정의하여 사용할 수 있도록 하는 기능.

[3번 연산자 함수란 무엇인가?]
연산자를 사용자 정의 클래스에 대해 중복 정의하기 위해 사용하는 함수. operator 키워드를 사용하여 정의함. 함수명은 operator <연산자>이고, 매개변수는 피연산자의 자료형 및 개수이고
반환형은 연산 결과값의 자료형으로 작성한다. 연산자 함수는 클래스의 멤버함수로 구현하거나전역함수로 구현하고 클래스에 friend 함수로 선언하여 사용할 수 있음.

[4번 객체 지향형 언어의 특징 중의 하나인 다형성의 의미를 설명하시오]
다형성은 같은 이름의 함수나 연산자가 서로 다른 클래스의 객체에 대해 다양한 방식으로 동작할 수 있도록 하는 기능이다.
다형성은 정적 다형성과 동적 다형성으로 나뉘는데 정적 다형성은 같은 이름의 함수가 매개변수의 타입이나 개수에 따라 다르게 동작하는 오버로딩, 
부모 클래스의 함수를 자식 클래스에서 재정의하여 동작을 다르게 하는 오버라이딩이 있고, 동적 다형성은 가상함수와 상속을 통해 구현되며, 프로그램 실행
중에 어떤 함수가 호출될지를 결정하는 것이다. 다형성은 코드의 유연성과 재사용성에 도움을 줌.
