[1번 STL 라이브러리에서 컨테이너 클래스, 이터레이터 클래스, 알고리즘 함수의 역할을 각각 설명하시오.]
- 컨테이너 클래스: 데이터를 저장하고 검색하기 위해 담아두는 자료 구조를 구현한 클래스
- 이터레이터 클래스: 컨테이너의 원소들을 하나씩 순회 접근 하기위해 만들어진 컨테이너 원소에 대한 포인터 이터레이터를 관리하는 클래스. 이터레이터를 사용하면 컨테이너의 구현 세부 사항을 알 필요없이 데이터를 순회하거나 수정 가능.
- 알고리즘 함수: 컨테이너 원소에 대한 복사(copy), 검색(find, search), 삭제(remove) 등의 기능을 구현한 템플릿 함수로써 컨테이너 데이터를 처리하거나 변환하는 역할을 한다.

[2번 포인터와 iterator의 공통점과 차이점은 각각 무엇인가?]
- 포인터와 iterator의 공통점은 모두 데이터를 가리키며 가리킨 해당 위치 값을 접근하거나 수정할 수 있다. 차이점은 포인터는 메모리 주소를 저장하는 변수이고 iterator는 클래스 기반으로 설계된 추상화된 객체이다.

[3번 vector 클래스의 erase, insert 멤버 함수의 매개변수, 리턴값, 기능을 설명하시오.]
- erase 함수 => ex) v.erase(it)
  -> 매개변수: 제거할 요소를 가리킨 반복자 it
  -> 리턴값: 삭제한 요소의 다음 위치를 가리키는 반복자 it+1
  -> 기능: 벡터에서 하나 이상의 요소를 제거하는 기능이다. 벡터의 크기를 줄이고, 제거된 요소 뒤의 요소를 가리킴.
- insert 함수 => ex) v.insert(it, value)
  -> 매개변수: 삽입할 요소를 가리키는 반복자 it, 삽입할 요소 value
  -> 리턴값: 삽인된 요소를 가리키는 반복자
  -> 기능: 벡터의 특정 위치에 요소를 삽입함. 
